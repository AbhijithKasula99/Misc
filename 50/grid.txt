- Just like we have flexbox froggy we have https://cssgridgarden.com/ for practcing the grid layout.

----------------------

HTML CODE 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Figuring out CSS</title>
    <link rel="stylesheet" href="./CSS/style.css">
</head>
<body>
    <header class="header el"><h1><Header></Header>Header</h1></header>
    <main class="container">
        <div class="box">1</div>
        <div class="box">2</div>
        <div class="box">3</div>
        <div class="box">4</div>
        <div class="box">5</div>
        <div class="box">6</div>
    <aside class="sidebar el"><h2>sidebar</h2></aside>
    <footer class="footer el"><h2>Footer</h2></footer>    
    </main>
</body>
</html>

--------------------

CSS CODE

@import url("https://fonts.googleapis.com/css2?family=Inconsolata&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  display: grid;
  grid-template-columns: repeat(9, 1fr);
  grid-auto-rows: 75px auto 75px;
  min-height: 100vh;
  font-family: "Inconsolata", monospace;
  grid-template-areas: 
  "hd hd hd hd hd hd hd hd hd"  
  "mn mn mn mn mn mn mn sb sb"
  "ft ft ft ft ft ft ft ft ft" /* Designing how the layout of the page must look like */
}

.el {
    background-color: aqua;
    color: #333;
    display: grid;
    place-content: center;
    gap: 1rem;
}

/* Above we have assigned the template areas and then assign the necessary template to necessary class */

.header {
    grid-area: hd;
}

.footer {
    grid-area: ft;
}

.sidebar {
    grid-area: sb;
    background-color: greenyellow;
}

.box {
  background-color: black;
  color: white;
  font-size: 2rem;
  padding: 0.5rem;
}

.container {
  grid-area: mn;  
  display: grid;
  /* grid-template-columns: 200px 100px 200px; another alternative is 2fr 1fr 1fr*/
  grid-template-columns: repeat(2, 1fr, 2fr);
  grid-auto-rows: minmax(100px, auto);
  min-height: 400px;
  gap: 2rem;
}

.box:nth-child(3) {
  background-color: blue;
  /*     grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 1;
    grid-row-end: 3; */

  /* The shortform for above code is: */
  grid-column: 1/4;
  grid-row: 1/3;
}

.box:nth-child(5) {
  background-color: purple;
  grid-column: 1/5;
  grid-row: 2/5;
}

.box:nth-child(1) {
  display: grid; /* This line of code is important to ensure align-content, justify-content and place content functions properly  */
  place-content: center;
}

