- Created a class called container and created 6 div blocks and labelled it from 1 to 6.

- Went on to the CSS file and did some design changes to the page and then edited the container and enabled the flex condition. 

- And we did tweak few properties of container then it will be useful too.

- The flexboxes do not move according to the page so to edit them and make it responsive we use flex-wrap. 

- Using box nth child we can edit a specific element too. 

- Use this to practice https://flexboxfroggy.com/ flexbox.

---------------------------------------------------------------------

HTML CODE

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Figuring Out CSS</title>
    <link rel="stylesheet" href="./CSS/style.css">
</head>
<body>
    <main class="container">
        <div class="box">1</div>
        <div class="box">2</div>
<!--         <div class="box">3</div>
        <div class="box">4</div>
        <div class="box">5</div>
        <div class="box">6</div> -->
    </main>
</body>
</html>

--------------------------------------------------------------------------

CSS Code

@import url('https://fonts.googleapis.com/css2?family=Fragment+Mono&family=Inter+Tight:wght@300;500&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Fragment Mono', monospace;
    min-height: 100vh;
    padding: 20px;
}

.container {
    max-width: 800px;
    min-height: 400px;
    margin-inline: auto;
    border: 1px solid black;
    display: flex; /* Turns the content vertically */
    justify-content: center; /* Puts the content to the center */
    gap: 1rem; /* Generates gap */
    align-items: center;
    flex-direction: row;
    flex-wrap: wrap;
    flex-flow: row wrap;
}

.box {
    /* min-width: 100px; */
    height: 100px;
    background-color: black;
    color: white;
    font-size: 2rem;   
    
    /* To adjust the numbers accordingly */
    display: flex;
    justify-content: center;
    align-items: center;

    flex-grow: 1;
    flex-basis: 100px;
}

.box:nth-child(2) {
    flex-grow: 2; /* Each will get 100px for sure as the 2nd element has grow of 2 it will double  */
}

---------------------------------------------------------------------